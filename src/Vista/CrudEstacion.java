/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import DAO.Conexion;
import DAO.DAOEmpleadoImpl;
import DAO.DAOEstacionImpl;
import Mapeo.Estacion;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Container;
import java.awt.Font;
import static java.awt.Frame.MAXIMIZED_BOTH;
import java.awt.Graphics;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import static javax.swing.WindowConstants.HIDE_ON_CLOSE;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author PORTATIL
 */
public class CrudEstacion extends javax.swing.JFrame {

    /**
     * Creates new form CrudEstacion
     */
    
    private int ejex;
    private int ejey;
    FrameTestBase t = new FrameTestBase();

    
    public void setX(int ejex) {
        this.ejex = ejex;
    }

    public void setY(int ejey) {
        this.ejey = ejey;
    }

    public int getX() {
        return this.ejex;
    }

    public int getY() {
        return this.ejey;
    } 
    
    public CrudEstacion() {
        initComponents();
        
        DAOEmpleadoImpl mi_empleado = new DAOEmpleadoImpl();
        List<String> empleados = new ArrayList<String>();
        
        try {
            empleados = mi_empleado.listarEmpleados(3);//traigo todos los administradores que hay en el sistema
            
            if (empleados.isEmpty()) {
                empleados.add("No existe Administrador en la BD");//seteo la posicion cero por si no hay datos
                guardar.setEnabled(false);
            }
            
            Iterator iter = empleados.iterator();
            while (iter.hasNext()) {
                this.estacion_admin.addItem(iter.next().toString());
            }
            
        } catch (Exception ex) {
            //Logger.getLogger(CrudEstacion.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, ex);
        }
    }
    
    public boolean validaCampos() {

        boolean mensaje = false;

        if (estacion_nombre.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Debe digitar el nombre de la estación");

        } else if (this.getX() == 0 && this.getY() == 0) {

            JOptionPane.showMessageDialog(null, "Debe digitar la posición de la estacion en el mapa");

        } else {
            
            mensaje = true;
            
        }

        return mensaje;
    }
    
    public void setCampos() {

        estacion_nombre.setText("");
        this.setX(0);
        this.setY(0);
        estacion_id.setText("");
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        jDialog2 = new javax.swing.JDialog();
        jDialog3 = new javax.swing.JDialog();
        jDialog4 = new javax.swing.JDialog();
        jDialog5 = new javax.swing.JDialog();
        jDialog6 = new javax.swing.JDialog();
        jDialog7 = new javax.swing.JDialog();
        CrudEstacion = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        estacion_id = new javax.swing.JTextField();
        estacion_n = new javax.swing.JLabel();
        estacion_nombre = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        estacion_admin = new javax.swing.JComboBox<String>();
        guardar = new javax.swing.JButton();
        eliminar = new javax.swing.JButton();
        Listar = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog2Layout = new javax.swing.GroupLayout(jDialog2.getContentPane());
        jDialog2.getContentPane().setLayout(jDialog2Layout);
        jDialog2Layout.setHorizontalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog2Layout.setVerticalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog3Layout = new javax.swing.GroupLayout(jDialog3.getContentPane());
        jDialog3.getContentPane().setLayout(jDialog3Layout);
        jDialog3Layout.setHorizontalGroup(
            jDialog3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog3Layout.setVerticalGroup(
            jDialog3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog4Layout = new javax.swing.GroupLayout(jDialog4.getContentPane());
        jDialog4.getContentPane().setLayout(jDialog4Layout);
        jDialog4Layout.setHorizontalGroup(
            jDialog4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog4Layout.setVerticalGroup(
            jDialog4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog5Layout = new javax.swing.GroupLayout(jDialog5.getContentPane());
        jDialog5.getContentPane().setLayout(jDialog5Layout);
        jDialog5Layout.setHorizontalGroup(
            jDialog5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog5Layout.setVerticalGroup(
            jDialog5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog6Layout = new javax.swing.GroupLayout(jDialog6.getContentPane());
        jDialog6.getContentPane().setLayout(jDialog6Layout);
        jDialog6Layout.setHorizontalGroup(
            jDialog6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog6Layout.setVerticalGroup(
            jDialog6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog7Layout = new javax.swing.GroupLayout(jDialog7.getContentPane());
        jDialog7.getContentPane().setLayout(jDialog7Layout);
        jDialog7Layout.setHorizontalGroup(
            jDialog7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog7Layout.setVerticalGroup(
            jDialog7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Estaciones");

        jLabel2.setText("Id. Estación");

        estacion_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                estacion_idActionPerformed(evt);
            }
        });

        estacion_n.setText("Nombre Estación");

        jLabel4.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel4.setText("Posición en Mapa");

        jLabel6.setText("Administrador Estación");

        guardar.setText("Guardar");
        guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarActionPerformed(evt);
            }
        });

        eliminar.setText("Eliminar");
        eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarActionPerformed(evt);
            }
        });

        Listar.setText("Listar");
        Listar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ListarActionPerformed(evt);
            }
        });

        jButton4.setText("Consultar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Salir");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton1.setText("Asignar Posición");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout CrudEstacionLayout = new javax.swing.GroupLayout(CrudEstacion);
        CrudEstacion.setLayout(CrudEstacionLayout);
        CrudEstacionLayout.setHorizontalGroup(
            CrudEstacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CrudEstacionLayout.createSequentialGroup()
                .addGroup(CrudEstacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CrudEstacionLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(CrudEstacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(estacion_nombre)
                            .addGroup(CrudEstacionLayout.createSequentialGroup()
                                .addGroup(CrudEstacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2)
                                    .addGroup(CrudEstacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(estacion_id, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(estacion_n, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel6)
                                    .addComponent(estacion_admin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CrudEstacionLayout.createSequentialGroup()
                                .addGroup(CrudEstacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(guardar)
                                    .addComponent(eliminar))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 80, Short.MAX_VALUE)
                                .addGroup(CrudEstacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Listar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addGroup(CrudEstacionLayout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(CrudEstacionLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        CrudEstacionLayout.setVerticalGroup(
            CrudEstacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CrudEstacionLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(29, 29, 29)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(estacion_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(estacion_n)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(estacion_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(estacion_admin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addGroup(CrudEstacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(guardar)
                    .addComponent(jButton4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(CrudEstacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(eliminar)
                    .addComponent(Listar))
                .addGap(33, 33, 33)
                .addComponent(jButton5)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(CrudEstacion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(CrudEstacion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void estacion_idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_estacion_idActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_estacion_idActionPerformed

    private void guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarActionPerformed
        // TODO add your handling code here:
        
        DAOEstacionImpl mi_estacion = new DAOEstacionImpl();

        if (validaCampos()) {

            try {
                String estacion_ubicacion = this.getX() + "-" + this.getY();
                String estado_insersion = mi_estacion.registrar(estacion_nombre.getText(), estacion_ubicacion, estacion_admin.getSelectedItem().toString());
                JOptionPane.showMessageDialog(null, estado_insersion);

                if (!estado_insersion.equalsIgnoreCase("")) {
                    setCampos();
                }

            } catch (Exception ex) {
                Logger.getLogger(CrudEmpleado.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_guardarActionPerformed

    private void eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarActionPerformed
        // TODO add your handling code here:
        
        DAOEstacionImpl mi_estacion = new DAOEstacionImpl();
        String id_estacion = estacion_id.getText();

        if (id_estacion.equals("")) {
            JOptionPane.showMessageDialog(null, "Por favor digite el id de la estación");
        } else {

            try {

                String estado = mi_estacion.eliminar(Integer.parseInt(id_estacion));
                JOptionPane.showMessageDialog(null, estado);

                if (estado.equalsIgnoreCase("eliminación exitosa")) {
                    estacion_id.setText("");
                }

            } catch (Exception ex) {
                //Logger.getLogger(CrudUsuario.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, ex);
            }

        }
    }//GEN-LAST:event_eliminarActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        
        DAOEstacionImpl mi_estacion = new DAOEstacionImpl();
        String id_estacion = estacion_id.getText();

        if (id_estacion.equals("")) {
            JOptionPane.showMessageDialog(null, "Por favor dígite el id de la estación");
        } else {
            try {
                if (!mi_estacion.existe(Integer.parseInt(id_estacion))) {
                    JOptionPane.showMessageDialog(null, "La estación que busca no existe");
                } else {
                    
                    guardar.setEnabled(false);
                    eliminar.setEnabled(false);
                    Estacion mi_estaciocita = mi_estacion.buscar(Integer.parseInt(id_estacion));

                    String ejes = mi_estaciocita.getEstacionUbicacion();
                    String eje_x = "";
                    String eje_y = "";
                    
                    if(!ejes.equals("") || !ejes.isEmpty()){
                        String[] array_ejes = ejes.split("-");

                        eje_x = array_ejes[0];
                        eje_y = array_ejes[0];
                    }

                    
                    /*for (String array_eje : array_ejes) {
                        System.out.println(array_eje);
                    }*/

                    estacion_id.setText("" + mi_estaciocita.getEstacionId() + "");
                    estacion_nombre.setText(mi_estaciocita.getEstacionNombre());
                    setX(Integer.parseInt(eje_x));
                    setY(Integer.parseInt(eje_y));
                    
                    System.out.println(getX() + ":" + getY());
                    
                    estacion_admin.setSelectedItem(mi_estaciocita.getEstacionAdministrador().getAdministradorEmpleadoId());

                    JOptionPane.showMessageDialog(null, mi_estaciocita.getEstacionAdministrador().getAdministradorEmpleadoId());
                    
                    this.setVisible(false);

                    JButton actualizar = new JButton("Actualizar");//creo un boton
                    //actualizar.setBounds(new Rectangle(50, 50, 100, 75));
                    //actualizar.setSize(80, 29);
                    actualizar.reshape(150, 10, 100, 27);// x,y,largo,ancho
                    this.CrudEstacion.add(actualizar);
                    estacion_id.setEnabled(false);
                    this.setVisible(true);

                    actualizar.addActionListener(new java.awt.event.ActionListener() {
                        @Override
                        public void actionPerformed(java.awt.event.ActionEvent evt) {

                            try {
                                
                                String estacion_ubicacion = getX() + "-" + getY();
                                
                                //JOptionPane.showMessageDialog(null, estacion_ubicacion);

                                if (validaCampos()) {

                                    String estado = mi_estacion.modificar(Integer.parseInt(estacion_id.getText()), estacion_nombre.getText(), estacion_ubicacion, estacion_admin.getSelectedItem().toString());

                                    JOptionPane.showMessageDialog(null, estado);

                                    if (estado.equalsIgnoreCase("actualización exitosa")) {
                                        //System.exit(0);
                                        CrudEstacion.remove(actualizar);
                                        setVisible(false);
                                        setCampos();

                                        guardar.setEnabled(true);
                                        eliminar.setEnabled(true);
                                        estacion_id.setEnabled(true);

                                        setVisible(true);

                                    }
                                }

                            } catch (Exception ex) {
                                Logger.getLogger(CrudEmpleado.class.getName()).log(Level.SEVERE, null, ex);
                                JOptionPane.showMessageDialog(null, ex);
                            }

                        }
                    });
                }
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, ex);
                Logger.getLogger(CrudEmpleado.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void ListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ListarActionPerformed
        // TODO add your handling code here:
        
        Conexion conect = new Conexion();
        conect.conectar();
        String path = null;

        try {
            path = new java.io.File(".").getCanonicalPath();
        } catch (IOException ex) {
            Logger.getLogger(CrudEmpleado.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {

            //System.out.println(path + "\\src\\Vista\\Empleados.jasper");
            JasperReport reporte = JasperCompileManager.compileReport(path + "\\src\\Reportes\\Estaciones.jrxml");
            JasperPrint print = JasperFillManager.fillReport(reporte, null, conect.getConexion());

            JasperViewer jasperViewer = new JasperViewer(print);
            jasperViewer.setVisible(true);

            conect.cerrar();

        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_ListarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        JPanel bgPanel = new BgPanel(getX(), getY());

        bgPanel.setLayout(new BorderLayout());
        bgPanel.add(new LoginPanel(), BorderLayout.LINE_START);
        bgPanel.setLocation(0, 0);

        t.setContentPane(bgPanel);
        t.setExtendedState(MAXIMIZED_BOTH);
        t.setDefaultCloseOperation(HIDE_ON_CLOSE);
        t.setVisible(true);
        
        Graphics g;
        g = t.getGraphics();
        
        VentanaConfirmacion mi_ventana = new VentanaConfirmacion();

        //System.out.println(getX() + " : " + getY());
        
        t.addMouseListener(new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent evt) {
                
                g.setFont(Font.getFont(Font.SANS_SERIF));
                g.setColor(Color.red);
                               
                g.fillRect(evt.getX(), evt.getY(), 4, 4);

                setX(evt.getX());
                setY(evt.getY());
                
                mi_ventana.setLabel();
                jDialog2.setVisible(true);

            }

        });
        
        //System.out.println(getX() + ":" + getY());
        
    }//GEN-LAST:event_jButton1ActionPerformed

    public class VentanaConfirmacion{
        
        private final javax.swing.JLabel LabelConfirmacion1 = new javax.swing.JLabel();
        
        public VentanaConfirmacion(){

            jDialog2.setLayout(null);

            javax.swing.JLabel LabelConfirmacion = new javax.swing.JLabel();

            LabelConfirmacion.setText("¿En realidad desea asignar la ubicación");
            LabelConfirmacion1.setText("(" + getX() + "-" + getY() + ") para la estación?");

            LabelConfirmacion.reshape(10, 10, 300, 20);
            LabelConfirmacion1.reshape(10, 30, 300, 20);

            jDialog2.add(LabelConfirmacion);
            jDialog2.add(LabelConfirmacion1);

            JButton asignar = new JButton("Asignar");//creo un boton
            asignar.setSize(80, 29);
            asignar.reshape(100, 60, 100, 27);// x,y,largo,ancho
            jDialog2.add(asignar);

            JButton cancelar = new JButton("Cancelar");//creo un boton
            cancelar.setSize(80, 29);
            cancelar.reshape(100, 100, 100, 27);// x,y,largo,ancho
            jDialog2.add(cancelar);

            jDialog2.setTitle("Mensaje de Confirmacion");
            jDialog2.setSize(300,200);
            jDialog2.setLocation(0,0);

            asignar.addActionListener(new java.awt.event.ActionListener() {
                @Override
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jDialog2.setVisible(false);
                    t.setVisible(false);
                }
            });

            cancelar.addActionListener(new java.awt.event.ActionListener() {
                @Override
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    setX(0);
                    setY(0);
                    jDialog2.setVisible(false);
                }
            });

        }
        
        public void setLabel(){
            LabelConfirmacion1.setText("(" + getX() + "-" + getY() + ") para la estación?");
        }
    }
    
    
     
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CrudEstacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CrudEstacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CrudEstacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CrudEstacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CrudEstacion().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel CrudEstacion;
    private javax.swing.JButton Listar;
    private javax.swing.JButton eliminar;
    private javax.swing.JComboBox<String> estacion_admin;
    private javax.swing.JTextField estacion_id;
    private javax.swing.JLabel estacion_n;
    private javax.swing.JTextField estacion_nombre;
    private javax.swing.JButton guardar;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JDialog jDialog2;
    private javax.swing.JDialog jDialog3;
    private javax.swing.JDialog jDialog4;
    private javax.swing.JDialog jDialog5;
    private javax.swing.JDialog jDialog6;
    private javax.swing.JDialog jDialog7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    // End of variables declaration//GEN-END:variables
}
